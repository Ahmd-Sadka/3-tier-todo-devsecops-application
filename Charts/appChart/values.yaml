replicaCount: 1
backend:
  replicas: 2
  image: a7md12/todo-api:1
  port: 3001
  env:
  - name: MONGO_URI
    value: mongodb://mongo:27017/todos
  resources:
    requests:
      memory: 64Mi
      cpu: 100m
    limits:
      memory: 1Gi
      cpu: '1'
  service:
    type: NodePort
    port: 3001
frontend:
  replicas: 2
  image: a7md12/3-tier-todo-devsecops-application-frontend-tier:21
  port: 3000
  env:
  - name: REACT_APP_API_URL
    value: http://k8s-sharedgroup-31b89e88b4-526087752.us-east-1.elb.amazonaws.com/api
  resources:
    requests:
      memory: 64Mi
      cpu: 100m
    limits:
      memory: 1Gi
      cpu: '1'
  service:
    type: NodePort
    port: 3000
namespace: default
image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: ''
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ''
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
service:
  type: ClusterIP
  port: 80
ingress:
  enabled: false
  className: ''
  annotations: {}
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
resources: {}
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
volumes: []
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}
